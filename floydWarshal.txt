#include <stdio.h>
#include <conio.h>

#define MAX 10
#define INF 100

void floydWarshall(int graph[MAX][MAX], int n) {
    int i, j, k;

    for (k = 0; k < n; k++) {
        for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {
                if (graph[i][j] > graph[i][k] + graph[k][j]) {
                    graph[i][j] = graph[i][k] + graph[k][j];
                }
            }
        }
    }
}

void printGraph(int graph[MAX][MAX], int n) {
    int i, j;
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            if (graph[i][j] == INF)
                printf("%4s", "INF");
            else
                printf("%4d", graph[i][j]);
        }
        printf("\n");
    }
}

void main() {
    int graph[MAX][MAX];
    int n, i, j;

    clrscr();

    printf("Enter number of vertices (max %d): ", MAX);
    scanf("%d", &n);

    printf("Enter the adjacency matrix (use 100 for INF):\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            printf("Edge [%d][%d]: ", i, j);
            scanf("%d", &graph[i][j]);
        }
    }

    printf("\nOriginal Graph:\n");
    printGraph(graph, n);

    floydWarshall(graph, n);

    printf("\nShortest Path Matrix:\n");
    printGraph(graph, n);

    getch();
}
